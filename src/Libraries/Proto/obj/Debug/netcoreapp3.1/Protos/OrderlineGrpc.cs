// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: Protos/orderline.proto
// </auto-generated>
#pragma warning disable 0414, 1591
#region Designer generated code

using grpc = global::Grpc.Core;

namespace Proto {
  public static partial class RemoteOrderLine
  {
    static readonly string __ServiceName = "RemoteOrderLine";

    static void __Helper_SerializeMessage(global::Google.Protobuf.IMessage message, grpc::SerializationContext context)
    {
      #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
      if (message is global::Google.Protobuf.IBufferMessage)
      {
        context.SetPayloadLength(message.CalculateSize());
        global::Google.Protobuf.MessageExtensions.WriteTo(message, context.GetBufferWriter());
        context.Complete();
        return;
      }
      #endif
      context.Complete(global::Google.Protobuf.MessageExtensions.ToByteArray(message));
    }

    static class __Helper_MessageCache<T>
    {
      public static readonly bool IsBufferMessage = global::System.Reflection.IntrospectionExtensions.GetTypeInfo(typeof(global::Google.Protobuf.IBufferMessage)).IsAssignableFrom(typeof(T));
    }

    static T __Helper_DeserializeMessage<T>(grpc::DeserializationContext context, global::Google.Protobuf.MessageParser<T> parser) where T : global::Google.Protobuf.IMessage<T>
    {
      #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
      if (__Helper_MessageCache<T>.IsBufferMessage)
      {
        return parser.ParseFrom(context.PayloadAsReadOnlySequence());
      }
      #endif
      return parser.ParseFrom(context.PayloadAsNewBuffer());
    }

    static readonly grpc::Marshaller<global::Proto.OrderLineEmptyRequest> __Marshaller_OrderLineEmptyRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Proto.OrderLineEmptyRequest.Parser));
    static readonly grpc::Marshaller<global::Proto.OrderLinesReply> __Marshaller_OrderLinesReply = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Proto.OrderLinesReply.Parser));
    static readonly grpc::Marshaller<global::Proto.OrderLineSearchRequest> __Marshaller_OrderLineSearchRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Proto.OrderLineSearchRequest.Parser));
    static readonly grpc::Marshaller<global::Proto.OrderLineReply> __Marshaller_OrderLineReply = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Proto.OrderLineReply.Parser));
    static readonly grpc::Marshaller<global::Proto.OrderLineByOrderRequest> __Marshaller_OrderLineByOrderRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Proto.OrderLineByOrderRequest.Parser));
    static readonly grpc::Marshaller<global::Proto.OrderLineSuccess> __Marshaller_OrderLineSuccess = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Proto.OrderLineSuccess.Parser));
    static readonly grpc::Marshaller<global::Proto.OrderLineRequest> __Marshaller_OrderLineRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Proto.OrderLineRequest.Parser));

    static readonly grpc::Method<global::Proto.OrderLineEmptyRequest, global::Proto.OrderLinesReply> __Method_GetAll = new grpc::Method<global::Proto.OrderLineEmptyRequest, global::Proto.OrderLinesReply>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetAll",
        __Marshaller_OrderLineEmptyRequest,
        __Marshaller_OrderLinesReply);

    static readonly grpc::Method<global::Proto.OrderLineSearchRequest, global::Proto.OrderLineReply> __Method_GetOrderLineById = new grpc::Method<global::Proto.OrderLineSearchRequest, global::Proto.OrderLineReply>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetOrderLineById",
        __Marshaller_OrderLineSearchRequest,
        __Marshaller_OrderLineReply);

    static readonly grpc::Method<global::Proto.OrderLineByOrderRequest, global::Proto.OrderLinesReply> __Method_GetOrderLinesByOrderId = new grpc::Method<global::Proto.OrderLineByOrderRequest, global::Proto.OrderLinesReply>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetOrderLinesByOrderId",
        __Marshaller_OrderLineByOrderRequest,
        __Marshaller_OrderLinesReply);

    static readonly grpc::Method<global::Proto.OrderLineSearchRequest, global::Proto.OrderLineSuccess> __Method_DeleteOrderLineById = new grpc::Method<global::Proto.OrderLineSearchRequest, global::Proto.OrderLineSuccess>(
        grpc::MethodType.Unary,
        __ServiceName,
        "DeleteOrderLineById",
        __Marshaller_OrderLineSearchRequest,
        __Marshaller_OrderLineSuccess);

    static readonly grpc::Method<global::Proto.OrderLineRequest, global::Proto.OrderLineSuccess> __Method_AddItem = new grpc::Method<global::Proto.OrderLineRequest, global::Proto.OrderLineSuccess>(
        grpc::MethodType.Unary,
        __ServiceName,
        "AddItem",
        __Marshaller_OrderLineRequest,
        __Marshaller_OrderLineSuccess);

    static readonly grpc::Method<global::Proto.OrderLineRequest, global::Proto.OrderLineSuccess> __Method_UpdateById = new grpc::Method<global::Proto.OrderLineRequest, global::Proto.OrderLineSuccess>(
        grpc::MethodType.Unary,
        __ServiceName,
        "UpdateById",
        __Marshaller_OrderLineRequest,
        __Marshaller_OrderLineSuccess);

    /// <summary>Service descriptor</summary>
    public static global::Google.Protobuf.Reflection.ServiceDescriptor Descriptor
    {
      get { return global::Proto.OrderlineReflection.Descriptor.Services[0]; }
    }

    /// <summary>Base class for server-side implementations of RemoteOrderLine</summary>
    [grpc::BindServiceMethod(typeof(RemoteOrderLine), "BindService")]
    public abstract partial class RemoteOrderLineBase
    {
      public virtual global::System.Threading.Tasks.Task<global::Proto.OrderLinesReply> GetAll(global::Proto.OrderLineEmptyRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::Proto.OrderLineReply> GetOrderLineById(global::Proto.OrderLineSearchRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::Proto.OrderLinesReply> GetOrderLinesByOrderId(global::Proto.OrderLineByOrderRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::Proto.OrderLineSuccess> DeleteOrderLineById(global::Proto.OrderLineSearchRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::Proto.OrderLineSuccess> AddItem(global::Proto.OrderLineRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::Proto.OrderLineSuccess> UpdateById(global::Proto.OrderLineRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

    }

    /// <summary>Client for RemoteOrderLine</summary>
    public partial class RemoteOrderLineClient : grpc::ClientBase<RemoteOrderLineClient>
    {
      /// <summary>Creates a new client for RemoteOrderLine</summary>
      /// <param name="channel">The channel to use to make remote calls.</param>
      public RemoteOrderLineClient(grpc::ChannelBase channel) : base(channel)
      {
      }
      /// <summary>Creates a new client for RemoteOrderLine that uses a custom <c>CallInvoker</c>.</summary>
      /// <param name="callInvoker">The callInvoker to use to make remote calls.</param>
      public RemoteOrderLineClient(grpc::CallInvoker callInvoker) : base(callInvoker)
      {
      }
      /// <summary>Protected parameterless constructor to allow creation of test doubles.</summary>
      protected RemoteOrderLineClient() : base()
      {
      }
      /// <summary>Protected constructor to allow creation of configured clients.</summary>
      /// <param name="configuration">The client configuration.</param>
      protected RemoteOrderLineClient(ClientBaseConfiguration configuration) : base(configuration)
      {
      }

      public virtual global::Proto.OrderLinesReply GetAll(global::Proto.OrderLineEmptyRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetAll(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::Proto.OrderLinesReply GetAll(global::Proto.OrderLineEmptyRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetAll, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::Proto.OrderLinesReply> GetAllAsync(global::Proto.OrderLineEmptyRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetAllAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::Proto.OrderLinesReply> GetAllAsync(global::Proto.OrderLineEmptyRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetAll, null, options, request);
      }
      public virtual global::Proto.OrderLineReply GetOrderLineById(global::Proto.OrderLineSearchRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetOrderLineById(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::Proto.OrderLineReply GetOrderLineById(global::Proto.OrderLineSearchRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetOrderLineById, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::Proto.OrderLineReply> GetOrderLineByIdAsync(global::Proto.OrderLineSearchRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetOrderLineByIdAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::Proto.OrderLineReply> GetOrderLineByIdAsync(global::Proto.OrderLineSearchRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetOrderLineById, null, options, request);
      }
      public virtual global::Proto.OrderLinesReply GetOrderLinesByOrderId(global::Proto.OrderLineByOrderRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetOrderLinesByOrderId(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::Proto.OrderLinesReply GetOrderLinesByOrderId(global::Proto.OrderLineByOrderRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetOrderLinesByOrderId, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::Proto.OrderLinesReply> GetOrderLinesByOrderIdAsync(global::Proto.OrderLineByOrderRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetOrderLinesByOrderIdAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::Proto.OrderLinesReply> GetOrderLinesByOrderIdAsync(global::Proto.OrderLineByOrderRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetOrderLinesByOrderId, null, options, request);
      }
      public virtual global::Proto.OrderLineSuccess DeleteOrderLineById(global::Proto.OrderLineSearchRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DeleteOrderLineById(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::Proto.OrderLineSuccess DeleteOrderLineById(global::Proto.OrderLineSearchRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_DeleteOrderLineById, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::Proto.OrderLineSuccess> DeleteOrderLineByIdAsync(global::Proto.OrderLineSearchRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DeleteOrderLineByIdAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::Proto.OrderLineSuccess> DeleteOrderLineByIdAsync(global::Proto.OrderLineSearchRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_DeleteOrderLineById, null, options, request);
      }
      public virtual global::Proto.OrderLineSuccess AddItem(global::Proto.OrderLineRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return AddItem(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::Proto.OrderLineSuccess AddItem(global::Proto.OrderLineRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_AddItem, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::Proto.OrderLineSuccess> AddItemAsync(global::Proto.OrderLineRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return AddItemAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::Proto.OrderLineSuccess> AddItemAsync(global::Proto.OrderLineRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_AddItem, null, options, request);
      }
      public virtual global::Proto.OrderLineSuccess UpdateById(global::Proto.OrderLineRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateById(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::Proto.OrderLineSuccess UpdateById(global::Proto.OrderLineRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_UpdateById, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::Proto.OrderLineSuccess> UpdateByIdAsync(global::Proto.OrderLineRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateByIdAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::Proto.OrderLineSuccess> UpdateByIdAsync(global::Proto.OrderLineRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_UpdateById, null, options, request);
      }
      /// <summary>Creates a new instance of client from given <c>ClientBaseConfiguration</c>.</summary>
      protected override RemoteOrderLineClient NewInstance(ClientBaseConfiguration configuration)
      {
        return new RemoteOrderLineClient(configuration);
      }
    }

    /// <summary>Creates service definition that can be registered with a server</summary>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    public static grpc::ServerServiceDefinition BindService(RemoteOrderLineBase serviceImpl)
    {
      return grpc::ServerServiceDefinition.CreateBuilder()
          .AddMethod(__Method_GetAll, serviceImpl.GetAll)
          .AddMethod(__Method_GetOrderLineById, serviceImpl.GetOrderLineById)
          .AddMethod(__Method_GetOrderLinesByOrderId, serviceImpl.GetOrderLinesByOrderId)
          .AddMethod(__Method_DeleteOrderLineById, serviceImpl.DeleteOrderLineById)
          .AddMethod(__Method_AddItem, serviceImpl.AddItem)
          .AddMethod(__Method_UpdateById, serviceImpl.UpdateById).Build();
    }

    /// <summary>Register service method with a service binder with or without implementation. Useful when customizing the  service binding logic.
    /// Note: this method is part of an experimental API that can change or be removed without any prior notice.</summary>
    /// <param name="serviceBinder">Service methods will be bound by calling <c>AddMethod</c> on this object.</param>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    public static void BindService(grpc::ServiceBinderBase serviceBinder, RemoteOrderLineBase serviceImpl)
    {
      serviceBinder.AddMethod(__Method_GetAll, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Proto.OrderLineEmptyRequest, global::Proto.OrderLinesReply>(serviceImpl.GetAll));
      serviceBinder.AddMethod(__Method_GetOrderLineById, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Proto.OrderLineSearchRequest, global::Proto.OrderLineReply>(serviceImpl.GetOrderLineById));
      serviceBinder.AddMethod(__Method_GetOrderLinesByOrderId, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Proto.OrderLineByOrderRequest, global::Proto.OrderLinesReply>(serviceImpl.GetOrderLinesByOrderId));
      serviceBinder.AddMethod(__Method_DeleteOrderLineById, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Proto.OrderLineSearchRequest, global::Proto.OrderLineSuccess>(serviceImpl.DeleteOrderLineById));
      serviceBinder.AddMethod(__Method_AddItem, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Proto.OrderLineRequest, global::Proto.OrderLineSuccess>(serviceImpl.AddItem));
      serviceBinder.AddMethod(__Method_UpdateById, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Proto.OrderLineRequest, global::Proto.OrderLineSuccess>(serviceImpl.UpdateById));
    }

  }
}
#endregion
