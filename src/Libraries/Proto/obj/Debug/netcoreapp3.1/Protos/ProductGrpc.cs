// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: Protos/product.proto
// </auto-generated>
#pragma warning disable 0414, 1591
#region Designer generated code

using grpc = global::Grpc.Core;

namespace Proto {
  public static partial class RemoteProduct
  {
    static readonly string __ServiceName = "RemoteProduct";

    static void __Helper_SerializeMessage(global::Google.Protobuf.IMessage message, grpc::SerializationContext context)
    {
      #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
      if (message is global::Google.Protobuf.IBufferMessage)
      {
        context.SetPayloadLength(message.CalculateSize());
        global::Google.Protobuf.MessageExtensions.WriteTo(message, context.GetBufferWriter());
        context.Complete();
        return;
      }
      #endif
      context.Complete(global::Google.Protobuf.MessageExtensions.ToByteArray(message));
    }

    static class __Helper_MessageCache<T>
    {
      public static readonly bool IsBufferMessage = global::System.Reflection.IntrospectionExtensions.GetTypeInfo(typeof(global::Google.Protobuf.IBufferMessage)).IsAssignableFrom(typeof(T));
    }

    static T __Helper_DeserializeMessage<T>(grpc::DeserializationContext context, global::Google.Protobuf.MessageParser<T> parser) where T : global::Google.Protobuf.IMessage<T>
    {
      #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
      if (__Helper_MessageCache<T>.IsBufferMessage)
      {
        return parser.ParseFrom(context.PayloadAsReadOnlySequence());
      }
      #endif
      return parser.ParseFrom(context.PayloadAsNewBuffer());
    }

    static readonly grpc::Marshaller<global::Proto.ProductEmptyRequest> __Marshaller_ProductEmptyRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Proto.ProductEmptyRequest.Parser));
    static readonly grpc::Marshaller<global::Proto.ProductsReply> __Marshaller_ProductsReply = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Proto.ProductsReply.Parser));
    static readonly grpc::Marshaller<global::Proto.ProductSearchRequest> __Marshaller_ProductSearchRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Proto.ProductSearchRequest.Parser));
    static readonly grpc::Marshaller<global::Proto.ProductReply> __Marshaller_ProductReply = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Proto.ProductReply.Parser));
    static readonly grpc::Marshaller<global::Proto.ProductSuccess> __Marshaller_ProductSuccess = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Proto.ProductSuccess.Parser));
    static readonly grpc::Marshaller<global::Proto.ProductRequest> __Marshaller_ProductRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Proto.ProductRequest.Parser));

    static readonly grpc::Method<global::Proto.ProductEmptyRequest, global::Proto.ProductsReply> __Method_GetAll = new grpc::Method<global::Proto.ProductEmptyRequest, global::Proto.ProductsReply>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetAll",
        __Marshaller_ProductEmptyRequest,
        __Marshaller_ProductsReply);

    static readonly grpc::Method<global::Proto.ProductSearchRequest, global::Proto.ProductReply> __Method_GetProductById = new grpc::Method<global::Proto.ProductSearchRequest, global::Proto.ProductReply>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetProductById",
        __Marshaller_ProductSearchRequest,
        __Marshaller_ProductReply);

    static readonly grpc::Method<global::Proto.ProductSearchRequest, global::Proto.ProductSuccess> __Method_DeleteProductById = new grpc::Method<global::Proto.ProductSearchRequest, global::Proto.ProductSuccess>(
        grpc::MethodType.Unary,
        __ServiceName,
        "DeleteProductById",
        __Marshaller_ProductSearchRequest,
        __Marshaller_ProductSuccess);

    static readonly grpc::Method<global::Proto.ProductRequest, global::Proto.ProductSuccess> __Method_AddItem = new grpc::Method<global::Proto.ProductRequest, global::Proto.ProductSuccess>(
        grpc::MethodType.Unary,
        __ServiceName,
        "AddItem",
        __Marshaller_ProductRequest,
        __Marshaller_ProductSuccess);

    static readonly grpc::Method<global::Proto.ProductRequest, global::Proto.ProductSuccess> __Method_UpdateById = new grpc::Method<global::Proto.ProductRequest, global::Proto.ProductSuccess>(
        grpc::MethodType.Unary,
        __ServiceName,
        "UpdateById",
        __Marshaller_ProductRequest,
        __Marshaller_ProductSuccess);

    /// <summary>Service descriptor</summary>
    public static global::Google.Protobuf.Reflection.ServiceDescriptor Descriptor
    {
      get { return global::Proto.ProductReflection.Descriptor.Services[0]; }
    }

    /// <summary>Base class for server-side implementations of RemoteProduct</summary>
    [grpc::BindServiceMethod(typeof(RemoteProduct), "BindService")]
    public abstract partial class RemoteProductBase
    {
      public virtual global::System.Threading.Tasks.Task<global::Proto.ProductsReply> GetAll(global::Proto.ProductEmptyRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::Proto.ProductReply> GetProductById(global::Proto.ProductSearchRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::Proto.ProductSuccess> DeleteProductById(global::Proto.ProductSearchRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::Proto.ProductSuccess> AddItem(global::Proto.ProductRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::Proto.ProductSuccess> UpdateById(global::Proto.ProductRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

    }

    /// <summary>Client for RemoteProduct</summary>
    public partial class RemoteProductClient : grpc::ClientBase<RemoteProductClient>
    {
      /// <summary>Creates a new client for RemoteProduct</summary>
      /// <param name="channel">The channel to use to make remote calls.</param>
      public RemoteProductClient(grpc::ChannelBase channel) : base(channel)
      {
      }
      /// <summary>Creates a new client for RemoteProduct that uses a custom <c>CallInvoker</c>.</summary>
      /// <param name="callInvoker">The callInvoker to use to make remote calls.</param>
      public RemoteProductClient(grpc::CallInvoker callInvoker) : base(callInvoker)
      {
      }
      /// <summary>Protected parameterless constructor to allow creation of test doubles.</summary>
      protected RemoteProductClient() : base()
      {
      }
      /// <summary>Protected constructor to allow creation of configured clients.</summary>
      /// <param name="configuration">The client configuration.</param>
      protected RemoteProductClient(ClientBaseConfiguration configuration) : base(configuration)
      {
      }

      public virtual global::Proto.ProductsReply GetAll(global::Proto.ProductEmptyRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetAll(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::Proto.ProductsReply GetAll(global::Proto.ProductEmptyRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetAll, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::Proto.ProductsReply> GetAllAsync(global::Proto.ProductEmptyRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetAllAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::Proto.ProductsReply> GetAllAsync(global::Proto.ProductEmptyRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetAll, null, options, request);
      }
      public virtual global::Proto.ProductReply GetProductById(global::Proto.ProductSearchRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetProductById(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::Proto.ProductReply GetProductById(global::Proto.ProductSearchRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetProductById, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::Proto.ProductReply> GetProductByIdAsync(global::Proto.ProductSearchRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetProductByIdAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::Proto.ProductReply> GetProductByIdAsync(global::Proto.ProductSearchRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetProductById, null, options, request);
      }
      public virtual global::Proto.ProductSuccess DeleteProductById(global::Proto.ProductSearchRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DeleteProductById(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::Proto.ProductSuccess DeleteProductById(global::Proto.ProductSearchRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_DeleteProductById, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::Proto.ProductSuccess> DeleteProductByIdAsync(global::Proto.ProductSearchRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DeleteProductByIdAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::Proto.ProductSuccess> DeleteProductByIdAsync(global::Proto.ProductSearchRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_DeleteProductById, null, options, request);
      }
      public virtual global::Proto.ProductSuccess AddItem(global::Proto.ProductRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return AddItem(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::Proto.ProductSuccess AddItem(global::Proto.ProductRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_AddItem, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::Proto.ProductSuccess> AddItemAsync(global::Proto.ProductRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return AddItemAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::Proto.ProductSuccess> AddItemAsync(global::Proto.ProductRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_AddItem, null, options, request);
      }
      public virtual global::Proto.ProductSuccess UpdateById(global::Proto.ProductRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateById(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::Proto.ProductSuccess UpdateById(global::Proto.ProductRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_UpdateById, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::Proto.ProductSuccess> UpdateByIdAsync(global::Proto.ProductRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateByIdAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::Proto.ProductSuccess> UpdateByIdAsync(global::Proto.ProductRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_UpdateById, null, options, request);
      }
      /// <summary>Creates a new instance of client from given <c>ClientBaseConfiguration</c>.</summary>
      protected override RemoteProductClient NewInstance(ClientBaseConfiguration configuration)
      {
        return new RemoteProductClient(configuration);
      }
    }

    /// <summary>Creates service definition that can be registered with a server</summary>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    public static grpc::ServerServiceDefinition BindService(RemoteProductBase serviceImpl)
    {
      return grpc::ServerServiceDefinition.CreateBuilder()
          .AddMethod(__Method_GetAll, serviceImpl.GetAll)
          .AddMethod(__Method_GetProductById, serviceImpl.GetProductById)
          .AddMethod(__Method_DeleteProductById, serviceImpl.DeleteProductById)
          .AddMethod(__Method_AddItem, serviceImpl.AddItem)
          .AddMethod(__Method_UpdateById, serviceImpl.UpdateById).Build();
    }

    /// <summary>Register service method with a service binder with or without implementation. Useful when customizing the  service binding logic.
    /// Note: this method is part of an experimental API that can change or be removed without any prior notice.</summary>
    /// <param name="serviceBinder">Service methods will be bound by calling <c>AddMethod</c> on this object.</param>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    public static void BindService(grpc::ServiceBinderBase serviceBinder, RemoteProductBase serviceImpl)
    {
      serviceBinder.AddMethod(__Method_GetAll, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Proto.ProductEmptyRequest, global::Proto.ProductsReply>(serviceImpl.GetAll));
      serviceBinder.AddMethod(__Method_GetProductById, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Proto.ProductSearchRequest, global::Proto.ProductReply>(serviceImpl.GetProductById));
      serviceBinder.AddMethod(__Method_DeleteProductById, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Proto.ProductSearchRequest, global::Proto.ProductSuccess>(serviceImpl.DeleteProductById));
      serviceBinder.AddMethod(__Method_AddItem, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Proto.ProductRequest, global::Proto.ProductSuccess>(serviceImpl.AddItem));
      serviceBinder.AddMethod(__Method_UpdateById, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Proto.ProductRequest, global::Proto.ProductSuccess>(serviceImpl.UpdateById));
    }

  }
}
#endregion
